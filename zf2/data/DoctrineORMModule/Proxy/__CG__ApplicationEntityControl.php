<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Control extends \Application\Entity\Control implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array('controlNumber' => NULL, 'code' => NULL, 'productName' => NULL, 'batchNo' => NULL, 'expiryDate' => NULL, 'supplier' => NULL, 'initialAmmount' => NULL, 'balance' => NULL, 'quarntine' => NULL, 'released' => NULL, 'rejected' => NULL, 'dateCreated' => NULL, 'customer' => NULL, 'productType' => NULL, 'unit' => NULL, 'user' => NULL, 'controlTransactionsList' => NULL);



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        unset($this->controlNumber, $this->code, $this->productName, $this->batchNo, $this->expiryDate, $this->supplier, $this->initialAmmount, $this->balance, $this->quarntine, $this->released, $this->rejected, $this->dateCreated, $this->customer, $this->productType, $this->unit, $this->user, $this->controlTransactionsList);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', array($name));

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', array($name, $value));

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', array($name));

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'controlNumber', 'code', 'productName', 'batchNo', 'expiryDate', 'supplier', 'initialAmmount', 'balance', 'quarntine', 'released', 'rejected', 'dateCreated', 'customer', 'productType', 'unit', 'user', 'controlTransactionsList');
        }

        return array('__isInitialized__', 'id');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Control $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->controlNumber, $this->code, $this->productName, $this->batchNo, $this->expiryDate, $this->supplier, $this->initialAmmount, $this->balance, $this->quarntine, $this->released, $this->rejected, $this->dateCreated, $this->customer, $this->productType, $this->unit, $this->user, $this->controlTransactionsList);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setControlNumber($controlNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setControlNumber', array($controlNumber));

        return parent::setControlNumber($controlNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getControlNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getControlNumber', array());

        return parent::getControlNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', array($code));

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', array());

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductCode($productCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductCode', array($productCode));

        return parent::setProductCode($productCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductCode', array());

        return parent::getProductCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductName($productName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductName', array($productName));

        return parent::setProductName($productName);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductName', array());

        return parent::getProductName();
    }

    /**
     * {@inheritDoc}
     */
    public function setBatchNo($batchNo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBatchNo', array($batchNo));

        return parent::setBatchNo($batchNo);
    }

    /**
     * {@inheritDoc}
     */
    public function getBatchNo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBatchNo', array());

        return parent::getBatchNo();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpiryDate($expiryDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpiryDate', array($expiryDate));

        return parent::setExpiryDate($expiryDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpiryDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpiryDate', array());

        return parent::getExpiryDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setSupplier($supplier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSupplier', array($supplier));

        return parent::setSupplier($supplier);
    }

    /**
     * {@inheritDoc}
     */
    public function getSupplier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupplier', array());

        return parent::getSupplier();
    }

    /**
     * {@inheritDoc}
     */
    public function setInitialAmmount($initialAmmount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInitialAmmount', array($initialAmmount));

        return parent::setInitialAmmount($initialAmmount);
    }

    /**
     * {@inheritDoc}
     */
    public function getBalance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBalance', array());

        return parent::getBalance();
    }

    /**
     * {@inheritDoc}
     */
    public function setBalance($balance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBalance', array($balance));

        return parent::setBalance($balance);
    }

    /**
     * {@inheritDoc}
     */
    public function getInitialAmmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInitialAmmount', array());

        return parent::getInitialAmmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuarntine($quarntine)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuarntine', array($quarntine));

        return parent::setQuarntine($quarntine);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuarntine()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuarntine', array());

        return parent::getQuarntine();
    }

    /**
     * {@inheritDoc}
     */
    public function setReleased($released)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReleased', array($released));

        return parent::setReleased($released);
    }

    /**
     * {@inheritDoc}
     */
    public function getReleased()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReleased', array());

        return parent::getReleased();
    }

    /**
     * {@inheritDoc}
     */
    public function setRejected($rejected)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRejected', array($rejected));

        return parent::setRejected($rejected);
    }

    /**
     * {@inheritDoc}
     */
    public function getRejected()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRejected', array());

        return parent::getRejected();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreated($dateCreated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreated', array($dateCreated));

        return parent::setDateCreated($dateCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreated', array());

        return parent::getDateCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomer(\Application\Entity\Customer $customer = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomer', array($customer));

        return parent::setCustomer($customer);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomer', array());

        return parent::getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductType(\Application\Entity\ProductType $productType = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductType', array($productType));

        return parent::setProductType($productType);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductType', array());

        return parent::getProductType();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnit(\Application\Entity\Unit $unit = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnit', array($unit));

        return parent::setUnit($unit);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnit', array());

        return parent::getUnit();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\CsnUser\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function addControlTransaction(\Application\Entity\ControlTransactions $controlTransactions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addControlTransaction', array($controlTransactions));

        return parent::addControlTransaction($controlTransactions);
    }

    /**
     * {@inheritDoc}
     */
    public function removeControlTransaction(\Application\Entity\ControlTransactions $controlTransaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeControlTransaction', array($controlTransaction));

        return parent::removeControlTransaction($controlTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function getControlTransactionsList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getControlTransactionsList', array());

        return parent::getControlTransactionsList();
    }

}
